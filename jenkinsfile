pipeline {
    agent any

    stages{

            stage("Checkout"){
                steps {
                    git branch:'master', url:'https://github.com/Mariela2020/QA_Dynatrace_TestGestion.git'
                }
            }

            stage("Build"){
                steps{
                    script {
                        bat 'mvn clean'
                        //bat 'mvn test'
                        //bat 'clean package'
                    }
                }
            }

            stage("Deploy to Dynatrace") {
                steps {
                   script{
                      createDynatraceDeploymentEvent(
                          envId: 'dynatrace',
                          tagMatchRules: [[meTypes: [[meType: 'PROCESS_GROUP']],
                           tags: [[context: 'CONTEXTLESS',
                           key: '', value: 'frontend']]]])
                   }
                }
            }

           stage("Performance Test") {
                steps{
                      recordDynatraceSession(
                            entityIds: [[$class: 'Host',
                            entityId: 'HOST-BD218C0C2D961C58']],
                            envId: 'dynatrace',
                            testCase: 'loadtest'){
                              perfSigDynatraceReports envId: 'dynatrace', nonFunctionalFailure: 2, specFile: 'specfile.json'
                            }
               }
          }

    }

}